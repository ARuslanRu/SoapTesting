buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.3"
    }
}

plugins {
    id 'org.springframework.boot' version '2.3.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id "io.qameta.allure" version "2.8.1"
}

allure {
    version = '2.13.6'
    autoconfigure = true
    aspectjweaver = true
    allureJavaVersion = '2.13.6'

    useJUnit5 {
        version = '2.13.6'
    }
}

group = 'com.example.springsoapclient'
version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '1.8'
sourceCompatibility = '11'

//compileJava.options.encoding = "UTF-8"

// tag::configurations[]
configurations {
    jaxb
    compileClasspath {
        resolutionStrategy.activateDependencyLocking()
    }
}
// end::configurations[]

repositories {
    mavenCentral()
    jcenter()
}

// tag::wsdl[]
//task genJaxb {
//    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
//    ext.classesDir = "${buildDir}/classes/jaxb"
//    ext.schema = "https://speller.yandex.net/services/spellservice?WSDL"
//
//    outputs.dir classesDir
//
//    doLast() {
//        project.ant {
//            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
//                    classpath: configurations.jaxb.asPath
//            mkdir(dir: sourcesDir)
//            mkdir(dir: classesDir)
//
//            xjc(destdir: sourcesDir, schema: schema,
//                    package: "com.example.springsoapslient.wsdl") {
//                arg(value: "-wsdl")
//                produces(dir: sourcesDir, includes: "**/*.java")
//            }
//
//            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
//                    debugLevel: "lines,vars,source",
//                    classpath: configurations.jaxb.asPath) {
//                src(path: sourcesDir)
//                include(name: "**/*.java")
//                include(name: "*.java")
//            }
//
//            copy(todir: classesDir) {
//                fileset(dir: sourcesDir, erroronmissingdir: false) {
//                    exclude(name: "**/*.java")
//                }
//            }
//        }
//    }
//}
// end::wsdl[]

dependencies {
// tag::dependency[]
    implementation('org.springframework.boot:spring-boot-starter-web-services') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.ws:spring-ws-core'
    // For Java 11:
    implementation 'org.glassfish.jaxb:jaxb-runtime'
//    compile(files(genJaxb.classesDir).builtBy(genJaxb))

    jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
// end::dependency[]
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    // https://mvnrepository.com/artifact/io.qameta.allure/allure-java-commons
    implementation group: 'io.qameta.allure', name: 'allure-java-commons', version: '2.13.6'
    implementation 'org.aspectj:aspectjweaver:1.9.5'

}

test {
    useJUnitPlatform()
}

// tag::bootjar[]
//bootJar {
//    baseName = 'gs-consuming-web-service'
//    version = '0.0.1'
//}
// end::bootjar[]